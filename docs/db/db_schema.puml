@startuml
skinparam linetype ortho
skinparam packageStyle rectangle
hide circle

title Orbital Logistics - Полная архитектура с пользователями и учетом транзакций

' === ОСНОВНЫЕ СУЩНОСТИ ===

entity Spacecraft {
  * id : BIGINT <<PK>> <<AI>>
  --
  * registry_code : VARCHAR(20) <<UK>>
  * name : VARCHAR(100)
  * spacecraft_type_id : BIGINT <<FK>>
  * mass_capacity : DECIMAL(15,2)
  * volume_capacity : DECIMAL(15,2)
  * status : ENUM('DOCKED', 'IN_TRANSIT', 'MAINTENANCE', 'DECOMMISSIONED')
  * current_location : VARCHAR(100)
}

entity SpacecraftType {
  * id : BIGINT <<PK>> <<AI>>
  --
  * type_name : VARCHAR(50) <<UK>>
  * classification : ENUM('CARGO_HAULER', 'PERSONNEL_TRANSPORT', 'SCIENCE_VESSEL')
  * max_crew_capacity : INTEGER
}

entity Cargo {
  * id : BIGINT <<PK>> <<AI>>
  --
  * name : VARCHAR(200)
  * cargo_category_id : BIGINT <<FK>>
  * mass_per_unit : DECIMAL(10,2)
  * volume_per_unit : DECIMAL(10,2)
  * cargo_type : ENUM('FOOD', 'EQUIPMENT', 'SCIENTIFIC', 'CONSTRUCTION_MATERIALS')
  * hazard_level : ENUM('NONE', 'LOW', 'MEDIUM', 'HIGH')
}

entity CargoCategory {
  * id : BIGINT <<PK>> <<AI>>
  --
  * name : VARCHAR(100) <<UK>>
  * parent_category_id : BIGINT <<FK>>
  * description : TEXT
}

entity StorageUnit {
  * id : BIGINT <<PK>> <<AI>>
  --
  * unit_code : VARCHAR(20) <<UK>>
  * location : VARCHAR(100)
  * storage_type : ENUM('AMBIENT', 'REFRIGERATED', 'PRESSURIZED', 'HAZMAT')
  * total_mass_capacity : DECIMAL(15,2)
  * total_volume_capacity : DECIMAL(15,2)
  * current_mass : DECIMAL(15,2)
  * current_volume : DECIMAL(15,2)
}

entity User {
  * id : BIGINT <<PK>> <<AI>>
  --
  * username : VARCHAR(64) <<UK>>
  * email : VARCHAR(255) <<UK>>
  * password_hash : VARCHAR(255)
  * first_name : VARCHAR(100)
  * last_name : VARCHAR(100)
  * role_id : BIGINT <<FK>>
  * is_active : BOOLEAN
  * created_at : TIMESTAMP
}

entity Role {
  * id : BIGINT <<PK>> <<AI>>
  --
  * name : VARCHAR(50) <<UK>>
  * description : TEXT
  * permissions : JSON
}

entity Mission {
  * id : BIGINT <<PK>> <<AI>>
  --
  * mission_code : VARCHAR(20) <<UK>>
  * mission_name : VARCHAR(200)
  * mission_type : ENUM('CARGO_TRANSPORT', 'PERSONNEL_TRANSPORT', 'SCIENCE_EXPEDITION')
  * status : ENUM('PLANNING', 'SCHEDULED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED')
  * priority : ENUM('LOW', 'MEDIUM', 'HIGH', 'CRITICAL')
  * commanding_officer_id : BIGINT <<FK>>
  * spacecraft_id : BIGINT <<FK>>
  * scheduled_departure : DATETIME
  * scheduled_arrival : DATETIME
}

' === СВЯЗУЮЩИЕ СУЩНОСТИ ДЛЯ M2M С ДОПОЛНИТЕЛЬНЫМИ ПОЛЯМИ ===

entity CargoManifest {
  * id : BIGINT <<PK>> <<AI>>
  --
  * spacecraft_id : BIGINT <<FK>>
  * cargo_id : BIGINT <<FK>>
  * storage_unit_id : BIGINT <<FK>>
  * quantity : INTEGER
  * loaded_at : DATETIME
  * unloaded_at : DATETIME
  * loaded_by_user_id : BIGINT <<FK>>
  * unloaded_by_user_id : BIGINT <<FK>>
  * manifest_status : ENUM('PENDING', 'LOADED', 'IN_TRANSIT', 'UNLOADED')
  * priority : ENUM('LOW', 'NORMAL', 'HIGH', 'CRITICAL')
  --
  note right: **Many-to-Many**\nКорабль-Груз-Склад-Пользователь\nПолный контроль грузопотоков
}

entity MissionAssignment {
  * id : BIGINT <<PK>> <<AI>>
  --
  * mission_id : BIGINT <<FK>>
  * user_id : BIGINT <<FK>>
  * assigned_at : DATETIME
  * assignment_role : ENUM('COMMANDER', 'PILOT', 'ENGINEER', 'SCIENTIST', 'CARGO_OFFICER')
  * responsibility_zone : VARCHAR(100)
  --
  note right: **Many-to-Many**\nМиссия-Пользователь\nс ролями и обязанностями
}

entity CargoStorage {
  * id : BIGINT <<PK>> <<AI>>
  --
  * storage_unit_id : BIGINT <<FK>>
  * cargo_id : BIGINT <<FK>>
  * quantity : INTEGER
  * stored_at : DATETIME
  * last_inventory_check : DATETIME
  * last_checked_by_user_id : BIGINT <<FK>>
  --
  note right: **Many-to-Many**\nСклад-Груз-Пользователь\nУчет складских запасов
}

entity MaintenanceLog {
  * id : BIGINT <<PK>> <<AI>>
  --
  * spacecraft_id : BIGINT <<FK>>
  * maintenance_type : ENUM('ROUTINE', 'REPAIR', 'UPGRADE', 'INSPECTION')
  * performed_by_user_id : BIGINT <<FK>>
  * supervised_by_user_id : BIGINT <<FK>>
  * start_time : DATETIME
  * end_time : DATETIME
  * status : ENUM('SCHEDULED', 'IN_PROGRESS', 'COMPLETED')
  * description : TEXT
  * cost : DECIMAL(10,2)
  --
  note right: **One-to-Many**\nИстория обслуживания\nс ответственными лицами
}

entity InventoryTransaction {
  * id : BIGINT <<PK>> <<AI>>
  --
  * transaction_type : ENUM('LOAD', 'UNLOAD', 'TRANSFER', 'ADJUSTMENT', 'CONSUMPTION')
  * cargo_id : BIGINT <<FK>>
  * quantity : INTEGER
  * from_storage_unit_id : BIGINT <<FK>>
  * to_storage_unit_id : BIGINT <<FK>>
  * from_spacecraft_id : BIGINT <<FK>>
  * to_spacecraft_id : BIGINT <<FK>>
  * performed_by_user_id : BIGINT <<FK>>
  * transaction_date : DATETIME
  * reason_code : VARCHAR(50)
  * reference_number : VARCHAR(100)
  * notes : TEXT
  --
  note right: **Учет операций**\nПолная трассировка\nвсех перемещений грузов
}

' === ПРОСТЫЕ M2M СВЯЗИ (БЕЗ ДОП. ПОЛЕЙ) ===

entity SpacecraftMission {
  * spacecraft_id : BIGINT <<FK>> <<PK>>
  * mission_id : BIGINT <<FK>> <<PK>>
  --
  note right: **Простое Many-to-Many**\nРезервные корабли для миссий
}

' === ОПРЕДЕЛЕНИЕ ВСЕХ ТИПОВ СВЯЗЕЙ ===

' === 1. One-to-Many / Many-to-One ===
note top of Spacecraft
  **One-to-Many / Many-to-One**
  Один корабль → Много записей в манифесте
  Много записей → Один корабль
end note

Spacecraft ||--o{ CargoManifest : "имеет\nманифесты"
CargoManifest }o--|| Spacecraft : "принадлежит\nкораблю"

Cargo ||--o{ CargoManifest : "входит в\nманифесты" 
CargoManifest }o--|| Cargo : "содержит\nгруз"

User ||--o{ CargoManifest : "загружает/выгружает"
CargoManifest }o--|| User : "выполнено\nпользователем"

' === 2. Many-to-Many через связующую сущность ===
note top of MissionAssignment
  **Many-to-Many с дополнительными полями**
  Много миссий → Много пользователей
  с ролями и ответственностью
end note

Mission ||--o{ MissionAssignment : "имеет\nназначения"
MissionAssignment }o--|| Mission : "для\nмиссии"

User ||--o{ MissionAssignment : "получает\nназначения" 
MissionAssignment }o--|| User : "назначен\nпользователю"

' === 3. Рекурсивные связи ===
note top of CargoCategory
  **Рекурсивная связь (One-to-Many)**
  Иерархическая категоризация грузов
end note

CargoCategory ||--o{ CargoCategory : "имеет\nподкатегории"
CargoCategory }o--|| CargoCategory : "входит в\nкатегорию"

' === 4. Простые Many-to-Many ===
note top of SpacecraftMission
  **Простые Many-to-Many**
  Резервные назначения кораблей
end note

Spacecraft }o--o{ Mission : "резервные\nмиссии"
SpacecraftMission ||..|| Spacecraft : "через"
SpacecraftMission ||..|| Mission : "через"

' === 5. Сложные связи между несколькими сущностями ===
note top of InventoryTransaction
  **Связь нескольких сущностей**
  Полная трассировка перемещений
  между складами, кораблями и пользователями
end note

InventoryTransaction }o--|| Cargo : "перемещаемый\nгруз"
InventoryTransaction }o--|| StorageUnit : "из склада"
InventoryTransaction }o--|| StorageUnit : "на склад"
InventoryTransaction }o--|| Spacecraft : "с корабля"
InventoryTransaction }o--|| Spacecraft : "на корабль"
InventoryTransaction }o--|| User : "выполнил\nпользователь"

' === 6. Базовые связи ===
SpacecraftType ||--o{ Spacecraft : "классифицирует\nкорабли"
Spacecraft }o--|| SpacecraftType : "имеет тип"

CargoCategory ||--o{ Cargo : "категории\nгрузов"
Cargo }o--|| CargoCategory : "принадлежит\nкатегории"

Role ||--o{ User : "пользователи\nроли"
User }o--|| Role : "имеет роль"

Mission ||--o{ Spacecraft : "основной\nкорабль"
Spacecraft }o--|| Mission : "выполняет\nмиссию"

Mission ||--o{ User : "командующий\nофицер"
User }o--|| Mission : "командует\nмиссией"

Spacecraft ||--o{ MaintenanceLog : "история\nобслуживания"
MaintenanceLog }o--|| Spacecraft : "для\nкорабля"

MaintenanceLog }o--|| User : "выполнил\nтехник"
MaintenanceLog }o--|| User : "контролировал\nруководитель"

StorageUnit ||--o{ CargoStorage : "хранит\nгрузы"
CargoStorage }o--|| StorageUnit : "на\nскладе"

Cargo ||--o{ CargoStorage : "распределен\nпо складам"
CargoStorage }o--|| Cargo : "хранимый\nгруз"

CargoStorage }o--|| User : "проверил\nпользователь"

CargoManifest }o--|| StorageUnit : "загружен\nиз склада"
StorageUnit ||--o{ CargoManifest : "используется\nдля загрузки"

@enduml